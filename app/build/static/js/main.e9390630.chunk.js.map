{"version":3,"sources":["App.js","index.js"],"names":["toReadableFileSize","bytes","currNum","i","toFixed","App","useState","isLoading","setIsLoading","toastContent","setToastContent","entries","setEntries","totalSize","setTotalSize","totalFiles","setTotalFiles","pathInput","setPathInput","analyzedPath","setAnalyzedPath","abortController","setAbortController","requestDirectoryDetails","useCallback","path","a","controller","AbortController","signal","fetch","response","DOMException","message","status","setData","json","data","errors","length","logFile","cancelRequest","abort","enterDirectory","name","nextPath","join","useEffect","initialPath","className","id","FormControl","placeholder","aria-label","aria-describedby","onChange","e","target","value","onKeyUp","key","Button","variant","onClick","Spinner","animation","size","Toast","role","aria-live","type","Table","striped","hover","colSpan","map","entry","icon","isDir","Date","parse","dateModified","toLocaleString","year","month","day","hour","minute","second","numFiles","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e9390630.chunk.js","sourcesContent":["import './App.css';\nimport path from 'path';\nimport Toast from 'react-bootstrap/Toast';\nimport Button from 'react-bootstrap/Button';\nimport Spinner from 'react-bootstrap/Spinner';\nimport Table from 'react-bootstrap/Table';\nimport FormControl from 'react-bootstrap/FormControl';\nimport { useState, useEffect, useCallback } from 'react';\n\nfunction toReadableFileSize(bytes) {\n  const units = ['B', 'KB', 'MB', 'GB', 'TB']\n  let currNum = bytes\n  let i = 0\n  while (currNum >= 1024) {\n    currNum /= 1024\n    i++\n  }\n  // dividing by 1 makes the JS runtime cut off trailing zeros after decimal\n  return currNum.toFixed(2) / 1 + ' ' + units[i]\n}\n\nfunction App() {\n  const [isLoading, setIsLoading] = useState(false)\n  const [toastContent, setToastContent] = useState(null)\n  const [entries, setEntries] = useState([])\n  const [totalSize, setTotalSize] = useState(null)\n  const [totalFiles, setTotalFiles] = useState(null)\n  const [pathInput, setPathInput] = useState('')\n  const [analyzedPath, setAnalyzedPath] = useState('')\n  const [abortController, setAbortController] = useState(null)\n\n  const requestDirectoryDetails = useCallback(async (path) => {\n    const controller = new AbortController();\n    const signal = controller.signal\n    setAbortController(controller)\n    setToastContent(null)\n\n    setIsLoading(true)\n    let response\n    try {\n      response = await fetch(`http://localhost:8002/?path=${path}`, { signal })\n    }\n    catch(error) {\n      // ignore the user-initiated abort error\n      if (error instanceof DOMException) {\n        return\n      }\n      setToastContent(error.message)\n      setIsLoading(false)\n      return\n    }\n    if (response.status !== 200) {\n      setToastContent('Directory not found on host machine.')\n      setData({})\n    }\n    else {\n      const data = await response.json()\n      const errors = data.errors\n      if (errors) {\n        setToastContent(`There were errors analyzing ${errors.length} director${errors.length > 1 ? 'ies': 'y'} inside of ${path}. Please see ${data.logFile} for more details. The table still shows all other directories.`)\n      }\n      setData(data)\n    }\n    setIsLoading(false)\n  }, [])\n\n  // on component mount\n  useEffect(() => {\n    (async function fetchInitialData() {\n      const response = await fetch(`http://localhost:8002/initialData`)\n      const { initialPath } = await response.json()\n      setPathInput(initialPath)\n      requestDirectoryDetails(initialPath)\n    })()\n  }, [requestDirectoryDetails])\n\n  function setData({entries=[], totalSize=null, totalFiles=null, path=''}) {\n    setEntries(entries)\n    setTotalSize(totalSize)\n    setTotalFiles(totalFiles)\n    setAnalyzedPath(path)\n  }\n\n  function cancelRequest() {\n    abortController.abort()\n    setIsLoading(false)\n    setPathInput(analyzedPath)\n  }\n\n  function enterDirectory(name) {\n    if (isLoading) {\n      cancelRequest()\n    }\n    const nextPath = path.join(analyzedPath, name)\n    setPathInput(nextPath)\n    requestDirectoryDetails(nextPath)\n  }\n\n  function handleKeyUp(e) {\n    if (e.key === 'Enter') {\n      requestDirectoryDetails(pathInput)\n    }\n  }\n  \n  return (\n    <div className=\"App\">\n      <p id=\"logo\">\n        josh<strong>ls</strong>\n      </p>\n      <FormControl\n        id=\"pathInput\"\n        placeholder=\"/path/to/directory/\"\n        aria-label=\"absolute path to directory\"\n        aria-describedby=\"basic-addon1\"\n        onChange={(e) => setPathInput(e.target.value)}\n        value={pathInput}\n        onKeyUp={handleKeyUp}\n      />\n      { !isLoading ?\n        <Button variant=\"info\" className=\"actionBtn\" onClick={() => requestDirectoryDetails(pathInput)}>\n          Analyze\n        </Button>\n        : \n        <Button variant=\"danger\" className=\"actionBtn\" onClick={cancelRequest}>\n          Cancel\n          <Spinner animation=\"grow\" size=\"sm\" id=\"spinner\" />\n        </Button>\n      }\n      \n      { toastContent && <Toast id=\"errToast\" role=\"alert\" aria-live=\"assertive\">\n        <div className=\"toast-header\">\n          <strong className=\"mr-auto\">Error</strong>\n          <button type=\"button\" className=\"ml-2 mb-1 close\" onClick={() => setToastContent(null)}>&times;</button>\n        </div>\n        <div className=\"toast-body\">\n          {toastContent}\n        </div>\n      </Toast> }\n\n      { totalSize !== null && <div id=\"content\">\n        <div id=\"directoryStats\">\n          <span>\n            <strong>{totalFiles}</strong> Files | <strong>{toReadableFileSize(totalSize)}</strong>\n          </span>\n          <span id=\"analyzedPath\">\n            Current Directory: <strong><em>{analyzedPath}</em></strong>\n          </span>\n        </div>\n        <Table striped hover size='sm'>\n          <thead className=\"thead-dark\">\n            <tr>\n              <th>Name</th>\n              <th>Size</th>\n              <th>Date Modified</th>\n              <th>Number of Files</th>\n            </tr>\n          </thead>\n          <tbody id=\"tableBody\">\n            <tr>\n              <td className=\"clickable\" colSpan=\"4\" onClick={() => enterDirectory('..')}>\n                üìÅ ..\n              </td>\n            </tr>\n            { entries.map(entry => {\n              const icon = entry.isDir ? 'üìÅ' : 'üìÑ';\n              return (\n                <tr key={entry.name}>\n                  <td\n                    className={entry.isDir ? \"clickable\" : null}\n                    onClick={() => entry.isDir ? enterDirectory(entry.name) : {}}\n                  >\n                    {icon} {entry.name}\n                  </td>\n                  <td>{toReadableFileSize(entry.size)}</td>\n                  <td>\n                    {(new Date(Date.parse(entry.dateModified))).toLocaleString('en-US', {\n                      year: 'numeric',\n                      month: 'long',\n                      day: 'numeric',\n                      hour: 'numeric',\n                      minute: 'numeric',\n                      second: 'numeric' \n                    })}\n                  </td>\n                  <td>{entry.numFiles}</td>\n                </tr>\n              )\n            })}\n          </tbody>\n        </Table>\n      </div> }\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}